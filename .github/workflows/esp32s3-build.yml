name: ESP32-S3 Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IDF_PATH: /home/runner/esp-idf
      IDF_TOOLS_PATH: /home/runner/.espressif

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Cache ESP-IDF tools
      - name: Cache ESP-IDF tools
        uses: actions/cache@v3
        with:
          path: ${{ env.IDF_TOOLS_PATH }}
          key: ${{ runner.os }}-espidf-tools-${{ hashFiles('**/esp-idf/tools/idf_tools.py') }}
          restore-keys: |
            ${{ runner.os }}-espidf-tools-

      # Cache ESP-IDF Python virtual environment
      - name: Cache ESP-IDF Python environment
        uses: actions/cache@v3
        with:
          path: ${{ env.IDF_TOOLS_PATH }}/python_env
          key: ${{ runner.os }}-espidf-py-${{ hashFiles('**/esp-idf/tools/requirements/requirements.core.txt') }}
          restore-keys: |
            ${{ runner.os }}-espidf-py-

      - name: Clone ESP-IDF
        run: git clone --recursive https://github.com/espressif/esp-idf.git $IDF_PATH --branch v5.1

      - name: Install ESP-IDF Tools
        run: /usr/bin/python3 $IDF_PATH/tools/idf_tools.py install

      - name: Create ESP-IDF Python environment
        run: |
          . $IDF_PATH/export.sh
          idf_tools.py install-python-env

      - name: Export ESP-IDF environment
        run: . $IDF_PATH/export.sh

      - name: Build firmware
        run: |
          . $IDF_PATH/export.sh
          idf.py build
